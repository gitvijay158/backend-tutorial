{"ast":null,"code":"// src/redux/reducers/userReducer.js\nimport { LOAD_USERS, UPDATE_USER, DELETE_USER, FETCH_SUCCESS, FETCH_FAILURE } from '../actions/userActions';\nconst initialState = {\n  loading: false,\n  users: [],\n  error: ''\n};\n\n// { loading: false, users: [], error: '' }\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_USERS:\n      return {\n        ...state,\n        loading: true\n      };\n    case FETCH_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n        error: ''\n      };\n    case FETCH_FAILURE:\n      return {\n        loading: false,\n        users: [],\n        error: action.error\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user.id === action.payload.userId ? {\n          ...user,\n          ...action.payload.updatedUserData\n        } : user)\n      };\n    case DELETE_USER:\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.payload.id)\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["LOAD_USERS","UPDATE_USER","DELETE_USER","FETCH_SUCCESS","FETCH_FAILURE","initialState","loading","users","error","userReducer","state","action","type","payload","map","user","id","userId","updatedUserData","filter"],"sources":["/opt/lampp/htdocs/reduxsagaapp/src/redux/reducers/userReducer.js"],"sourcesContent":["// src/redux/reducers/userReducer.js\nimport { LOAD_USERS, UPDATE_USER, DELETE_USER, FETCH_SUCCESS,FETCH_FAILURE } from '../actions/userActions';\n\nconst initialState = {\n  loading: false, users: [], error: ''\n};\n\n// { loading: false, users: [], error: '' }\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case LOAD_USERS:\n      return { ...state, loading: true };\n    case FETCH_SUCCESS:\n      return { \n        loading: false, \n        users: action.payload, \n        error: '' \n      };\n    case FETCH_FAILURE:\n      return { loading: false, users: [], error: action.error };\n   \n      \n    case UPDATE_USER:\n      return {\n        ...state,\n        users: state.users.map((user) =>\n          user.id === action.payload.userId\n            ? { ...user, ...action.payload.updatedUserData }\n            : user\n        ),\n      };\n      case DELETE_USER:\n        return {\n            ...state,\n            users: state.users.filter(user => user.id !== action.payload.id)\n        };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"],"mappings":"AAAA;AACA,SAASA,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAEC,aAAa,EAACC,aAAa,QAAQ,wBAAwB;AAE1G,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KAAK;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE;AACpC,CAAC;;AAED;;AAEA,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IAEjB,KAAKZ,UAAU;MACb,OAAO;QAAE,GAAGU,KAAK;QAAEJ,OAAO,EAAE;MAAK,CAAC;IACpC,KAAKH,aAAa;MAChB,OAAO;QACLG,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEI,MAAM,CAACE,OAAO;QACrBL,KAAK,EAAE;MACT,CAAC;IACH,KAAKJ,aAAa;MAChB,OAAO;QAAEE,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE,EAAE;QAAEC,KAAK,EAAEG,MAAM,CAACH;MAAM,CAAC;IAG3D,KAAKP,WAAW;MACd,OAAO;QACL,GAAGS,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACO,GAAG,CAAEC,IAAI,IAC1BA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACI,MAAM,GAC7B;UAAE,GAAGF,IAAI;UAAE,GAAGJ,MAAM,CAACE,OAAO,CAACK;QAAgB,CAAC,GAC9CH,IACN;MACF,CAAC;IACD,KAAKb,WAAW;MACd,OAAO;QACH,GAAGQ,KAAK;QACRH,KAAK,EAAEG,KAAK,CAACH,KAAK,CAACY,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE;MACnE,CAAC;IAEL;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}