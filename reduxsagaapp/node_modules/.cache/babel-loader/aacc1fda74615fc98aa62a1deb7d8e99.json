{"ast":null,"code":"// src/redux/store.js\n// import { createStore, applyMiddleware } from 'redux';\n// import {thunk} from 'redux-thunk';\n// import rootReducer from './reducers'; // Adjust the path to where your root reducer is\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\n// export default store;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\nconst store = configureStore({\n  reducer: rootReducer,\n  // Combined reducers\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(applyMiddleware(thunk)) // If needed\n});\nexport default store;","map":{"version":3,"names":["configureStore","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat","applyMiddleware","thunk"],"sources":["/opt/lampp/htdocs/reduxthunkapp/src/redux/store.js"],"sourcesContent":["\n// src/redux/store.js\n// import { createStore, applyMiddleware } from 'redux';\n// import {thunk} from 'redux-thunk';\n// import rootReducer from './reducers'; // Adjust the path to where your root reducer is\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\n// export default store;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer, // Combined reducers\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(applyMiddleware(thunk)), // If needed\n});\n\nexport default store;\n\n"],"mappings":"AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,YAAY;AAEpC,MAAMC,KAAK,GAAGF,cAAc,CAAC;EAC3BG,OAAO,EAAEF,WAAW;EAAE;EACtBG,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACC,eAAe,CAACC,KAAK,CAAC,CAAC,CAAE;AAC/F,CAAC,CAAC;AAEF,eAAeN,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}