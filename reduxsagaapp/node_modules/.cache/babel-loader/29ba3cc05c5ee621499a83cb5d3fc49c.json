{"ast":null,"code":"// src/redux/actions/userActions.js\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n\n// Action to load users\n// export const loadUsers = (users) => ({\n//   type: LOAD_USERS,\n//   payload: users\n// });\n\nexport const loadUsers = () => {\n  return dispatch => {\n    var _result;\n    const token = 'emjjjdsjfj'; //localStorage.getItem(\"jwtToken\");\n    // console.log(\"token===>\", token);\n    //   fetch placeholder data from jsonplaceholder\n    fetch(`http://localhost:3002/api/users`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(result =>\n    //dispatch response to the store\n    console.log(\"result===>\", result), dispatch({\n      type: LOAD_USERS,\n      payload: (_result = result) === null || _result === void 0 ? void 0 : _result.data\n    }));\n  };\n};\n\n// Action to update a user\nexport const updateUser = updatedUser => ({\n  type: UPDATE_USER,\n  payload: updatedUser\n});\n\n// Action to delete a user\nexport const deleteUser = id => ({\n  type: DELETE_USER,\n  payload: {\n    id\n  }\n});","map":{"version":3,"names":["LOAD_USERS","UPDATE_USER","DELETE_USER","loadUsers","dispatch","_result","token","fetch","headers","then","response","json","result","console","log","type","payload","data","updateUser","updatedUser","deleteUser","id"],"sources":["/opt/lampp/htdocs/reduxthunkapp/src/redux/actions/userActions.js"],"sourcesContent":["// src/redux/actions/userActions.js\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n\n// Action to load users\n// export const loadUsers = (users) => ({\n//   type: LOAD_USERS,\n//   payload: users\n// });\n\nexport const loadUsers = () => {\n\n\n  return (dispatch) => {\n\n    const token = 'emjjjdsjfj';//localStorage.getItem(\"jwtToken\");\n    // console.log(\"token===>\", token);\n    //   fetch placeholder data from jsonplaceholder\n    fetch(`http://localhost:3002/api/users`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((result) =>\n        //dispatch response to the store\n      console.log(\"result===>\", result),\n        dispatch({ \n          type: LOAD_USERS, \n          payload: result?.data \n        })\n      );\n  };\n\n\n};\n\n// Action to update a user\nexport const updateUser = (updatedUser) => ({\n  type: UPDATE_USER,\n  payload: updatedUser\n});\n\n// Action to delete a user\nexport const deleteUser = (id) => ({\n  type: DELETE_USER,\n  payload: { id }\n});\n\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,WAAW,GAAG,aAAa;;AAExC;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAG7B,OAAQC,QAAQ,IAAK;IAAA,IAAAC,OAAA;IAEnB,MAAMC,KAAK,GAAG,YAAY,CAAC;IAC3B;IACA;IACAC,KAAK,CAAC,iCAAiC,EAAE;MACvCC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUF,KAAK;MAClC;IACF,CAAC,CAAC,CACCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM;IACX;IACFC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,MAAM,CAAC,EAC/BR,QAAQ,CAAC;MACPW,IAAI,EAAEf,UAAU;MAChBgB,OAAO,GAAAX,OAAA,GAAEO,MAAM,cAAAP,OAAA,uBAANA,OAAA,CAAQY;IACnB,CAAC,CACH,CAAC;EACL,CAAC;AAGH,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAIC,WAAW,KAAM;EAC1CJ,IAAI,EAAEd,WAAW;EACjBe,OAAO,EAAEG;AACX,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAIC,EAAE,KAAM;EACjCN,IAAI,EAAEb,WAAW;EACjBc,OAAO,EAAE;IAAEK;EAAG;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}