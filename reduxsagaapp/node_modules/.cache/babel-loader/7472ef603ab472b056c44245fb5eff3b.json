{"ast":null,"code":"// src/redux/actions/userActions.js\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n\n// Action to load users\n// export const loadUsers = (users) => ({\n//   type: LOAD_USERS,\n//   payload: users\n// });\n\nexport const loadUsers = () => {\n  return dispatch => {\n    const token = 'emjjjdsjfj'; //localStorage.getItem(\"jwtToken\");\n    // console.log(\"token===>\", token);\n    //   fetch placeholder data from jsonplaceholder\n    fetch(`http://localhost:3002/api/users`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(result => {\n      //dispatch response to the store\n      console.log(\"result===>\", result);\n      dispatch({\n        type: LOAD_USERS,\n        payload: result\n      });\n    });\n  };\n};\n\n// Action to update a user\nexport const updateUser = updatedUser => ({\n  type: UPDATE_USER,\n  payload: updatedUser\n});\nexport const updateUserRecord = userId => {};\n\n// Action to delete a user\nexport const deleteUser = id => ({\n  type: DELETE_USER,\n  payload: {\n    id\n  }\n});","map":{"version":3,"names":["LOAD_USERS","UPDATE_USER","DELETE_USER","loadUsers","dispatch","token","fetch","headers","then","response","json","result","console","log","type","payload","updateUser","updatedUser","updateUserRecord","userId","deleteUser","id"],"sources":["/opt/lampp/htdocs/reduxthunkapp/src/redux/actions/userActions.js"],"sourcesContent":["// src/redux/actions/userActions.js\nexport const LOAD_USERS = 'LOAD_USERS';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\n\n// Action to load users\n// export const loadUsers = (users) => ({\n//   type: LOAD_USERS,\n//   payload: users\n// });\n\nexport const loadUsers = () => {\n\n  return (dispatch) => {\n\n    const token = 'emjjjdsjfj';//localStorage.getItem(\"jwtToken\");\n    // console.log(\"token===>\", token);\n    //   fetch placeholder data from jsonplaceholder\n    fetch(`http://localhost:3002/api/users`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    })\n      .then((response) => response.json())\n      .then((result) =>{\n        //dispatch response to the store\n        console.log(\"result===>\", result);\n        dispatch({ \n          type: LOAD_USERS, \n          payload: result\n        })\n      }\n        \n      );\n  };\n\n\n};\n\n// Action to update a user\nexport const updateUser = (updatedUser) => ({\n  type: UPDATE_USER,\n  payload: updatedUser\n});\n\nexport const updateUserRecord = (userId) => {\n\n}\n\n\n// Action to delete a user\nexport const deleteUser = (id) => ({\n  type: DELETE_USER,\n  payload: { id }\n});\n\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,WAAW,GAAG,aAAa;;AAExC;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAE7B,OAAQC,QAAQ,IAAK;IAEnB,MAAMC,KAAK,GAAG,YAAY,CAAC;IAC3B;IACA;IACAC,KAAK,CAAC,iCAAiC,EAAE;MACvCC,OAAO,EAAE;QACP,eAAe,EAAE,UAAUF,KAAK;MAClC;IACF,CAAC,CAAC,CACCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAI;MACf;MACAC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,MAAM,CAAC;MACjCP,QAAQ,CAAC;QACPU,IAAI,EAAEd,UAAU;QAChBe,OAAO,EAAEJ;MACX,CAAC,CAAC;IACJ,CAEA,CAAC;EACL,CAAC;AAGH,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAIC,WAAW,KAAM;EAC1CH,IAAI,EAAEb,WAAW;EACjBc,OAAO,EAAEE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAIC,MAAM,IAAK,CAE5C,CAAC;;AAGD;AACA,OAAO,MAAMC,UAAU,GAAIC,EAAE,KAAM;EACjCP,IAAI,EAAEZ,WAAW;EACjBa,OAAO,EAAE;IAAEM;EAAG;AAChB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}