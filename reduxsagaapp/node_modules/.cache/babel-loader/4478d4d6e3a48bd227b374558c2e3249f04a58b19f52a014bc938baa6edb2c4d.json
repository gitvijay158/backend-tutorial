{"ast":null,"code":"// someSaga.js\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Worker saga: will be fired on FETCH_DATA actions\nfunction* loadUsers() {\n  try {\n    const response = yield call(axios.get, 'http://localhost:3002/api/users');\n    yield put({\n      type: 'FETCH_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: 'FETCH_FAILURE',\n      error\n    });\n  }\n}\n\n// Watcher saga: spawns a new fetchData saga on each FETCH_DATA action\nexport function* watchUserGetData() {\n  yield takeEvery('FETCH_DATA', loadUsers);\n}","map":{"version":3,"names":["call","put","takeEvery","axios","loadUsers","response","get","type","payload","data","error","watchUserGetData"],"sources":["/opt/lampp/htdocs/reduxsagaapp/src/redux/sagas/userSaga.js"],"sourcesContent":["// someSaga.js\n\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Worker saga: will be fired on FETCH_DATA actions\nfunction* loadUsers() {\n  try {\n    const response = yield call(axios.get, 'http://localhost:3002/api/users');\n    yield put({ type: 'FETCH_SUCCESS', payload: response.data });\n  } catch (error) {\n    yield put({ type: 'FETCH_FAILURE', error });\n  }\n}\n\n// Watcher saga: spawns a new fetchData saga on each FETCH_DATA action\nexport function* watchUserGetData() {\n  yield takeEvery('FETCH_DATA', loadUsers);\n}\n"],"mappings":"AAAA;;AAEA,SAASA,IAAI,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACzD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,UAAUC,SAASA,CAAA,EAAG;EACpB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,IAAI,CAACG,KAAK,CAACG,GAAG,EAAE,iCAAiC,CAAC;IACzE,MAAML,GAAG,CAAC;MAAEM,IAAI,EAAE,eAAe;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMT,GAAG,CAAC;MAAEM,IAAI,EAAE,eAAe;MAAEG;IAAM,CAAC,CAAC;EAC7C;AACF;;AAEA;AACA,OAAO,UAAUC,gBAAgBA,CAAA,EAAG;EAClC,MAAMT,SAAS,CAAC,YAAY,EAAEE,SAAS,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}