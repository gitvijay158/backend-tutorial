{"ast":null,"code":"/*-----------Redux Thunk connection with createStore-------------- */\n// src/redux/store.js\n// import { createStore, applyMiddleware } from 'redux';\n// import {thunk} from 'redux-thunk';\n// import rootReducer from './reducers'; // Adjust the path to where your root reducer is\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\n// export default store;\n\n/*-----------Redux Thunk connection with configureStore(in built:applyMiddleware(thunk))-------------- */\n// import { configureStore } from '@reduxjs/toolkit';\n// import rootReducer from './reducers';\n\n// const store = configureStore({\n//   reducer: rootReducer,\n// });\n\n// export default store;\n\n/*-----------Redux Saga connection-------------- */\nimport createSagaMiddleware from 'redux-saga'; // 1. Import saga middleware","map":{"version":3,"names":["createSagaMiddleware"],"sources":["/opt/lampp/htdocs/reduxsagaapp/src/redux/store.js"],"sourcesContent":["\n/*-----------Redux Thunk connection with createStore-------------- */\n// src/redux/store.js\n// import { createStore, applyMiddleware } from 'redux';\n// import {thunk} from 'redux-thunk';\n// import rootReducer from './reducers'; // Adjust the path to where your root reducer is\n\n// const store = createStore(rootReducer, applyMiddleware(thunk));\n\n// export default store;\n\n/*-----------Redux Thunk connection with configureStore(in built:applyMiddleware(thunk))-------------- */\n// import { configureStore } from '@reduxjs/toolkit';\n// import rootReducer from './reducers';\n\n// const store = configureStore({\n//   reducer: rootReducer,\n// });\n\n// export default store;\n\n/*-----------Redux Saga connection-------------- */\nimport createSagaMiddleware from 'redux-saga'; // 1. Import saga middleware\n\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,oBAAoB,MAAM,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}